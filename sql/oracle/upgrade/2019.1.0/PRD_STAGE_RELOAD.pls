create or replace PROCEDURE         PRD_STAGE_RELOAD AS
  
PRAGMA AUTONOMOUS_TRANSACTION;
--script that runs this is scripts/stagereload.sh
BEGIN
BEGIN
  AAMFM.LOGOUTPUT('', 'PROGRAM STARTING');

  AAMFM.LOGOUTPUT('', 'BEGIN TEMP$STAGE_DIMENSION DROP');
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TEMP$STAGE_DIMENSION';
  EXCEPTION
    WHEN OTHERS THEN
      NULL;
  END;
  
  AAMFM.LOGOUTPUT('', 'BEGIN TEMP$STAGE_DIMENSION LOAD');
  BEGIN
    EXECUTE IMMEDIATE 'CREATE TABLE TEMP$STAGE_DIMENSION AS SELECT /*+PARALLEL */ * FROM STAGE_DIMENSION@JDAPALCX';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN STAGE_DIMENSION DELETE INDEX1');
  BEGIN
    EXECUTE IMMEDIATE 'DROP INDEX STAGE_DIMENSION_IDX';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN STAGE_DIMENSION DELETE INDEX2');
  BEGIN
    EXECUTE IMMEDIATE 'DROP INDEX STAGE_DIMENSION_IDX1';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN STAGE_DIMENSION DELETE INDEX3');
  BEGIN
    EXECUTE IMMEDIATE 'DROP INDEX STAGE_DIMENSION_IDX2';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN STAGE_DIMENSION DELETE INDEX4');
  BEGIN
    EXECUTE IMMEDIATE 'DROP INDEX STAGE_DIMENSION_IDX3';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN STAGE_DIMENSION DELETE INDEX5');
  BEGIN
    EXECUTE IMMEDIATE 'DROP INDEX STAGE_DIMENSION_IDX4';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN STAGE_DIMENSION TRUNCATEE');
  BEGIN
    EXECUTE IMMEDIATE 'TRUNCATE TABLE STAGE_DIMENSION';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN STAGE_DIMENSION RELOAD');
  BEGIN
    EXECUTE IMMEDIATE('
    INSERT INTO AAM.STAGE_DIMENSION
    SELECT /*+APPEND  PARALLEL(TEMP$STAGE_DIMENSION) */ *
    FROM TEMP$STAGE_DIMENSION
    ');
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN INDEX1 CREATE');
  BEGIN
    EXECUTE IMMEDIATE '
      CREATE INDEX "AAM"."STAGE_DIMENSION_IDX" ON "AAM"."STAGE_DIMENSION" ("LOCATION_ID", "DEPT_NBR", "SUBDEPT_NBR", "CLASS_NBR") 
      PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
      STORAGE(INITIAL 32768 NEXT 32768 MINEXTENTS 1 MAXEXTENTS 2147483645
      PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
      BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
      TABLESPACE "AAMINDEX"   
    ';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;  

  AAMFM.LOGOUTPUT('', 'BEGIN INDEX2 CREATE');
  BEGIN
    EXECUTE IMMEDIATE '
      CREATE INDEX "AAM"."STAGE_DIMENSION_IDX1" ON "AAM"."STAGE_DIMENSION" ("LOCATION_ID", "DEPT_NBR", "SUBDEPT_NBR", "CLASS_NBR", "ITEM_GROUP_NBR", "SUBCLASS_NBR", "CHOICE_NBR", "STYLE_MASTER_SKU", "COLOR_NBR", "SIZE_NBR", "DIM_NBR") 
      PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
      STORAGE(INITIAL 32768 NEXT 32768 MINEXTENTS 1 MAXEXTENTS 2147483645
      PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
      BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
      TABLESPACE "AAMDATA"
    ';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;    
  
  AAMFM.LOGOUTPUT('', 'BEGIN INDEX3 CREATE');
  BEGIN
    EXECUTE IMMEDIATE '
      CREATE INDEX "AAM"."STAGE_DIMENSION_IDX2" ON "AAM"."STAGE_DIMENSION" ("DEPT_NBR", "SUBDEPT_NBR", "CLASS_NBR", "ITEM_GROUP_NBR") 
      PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
      STORAGE(INITIAL 32768 NEXT 32768 MINEXTENTS 1 MAXEXTENTS 2147483645
      PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
      BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
      TABLESPACE "AAMINDEX"
    ';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;    

  AAMFM.LOGOUTPUT('', 'BEGIN INDEX4 CREATE');
  BEGIN
    EXECUTE IMMEDIATE '
      CREATE UNIQUE INDEX "AAM"."STAGE_DIMENSION_IDX3" ON "AAM"."STAGE_DIMENSION" ("STYLE_MASTER_SKU", "LOCATION_ID") 
      PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
      STORAGE(INITIAL 32768 NEXT 32768 MINEXTENTS 1 MAXEXTENTS 2147483645
      PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
      BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
      TABLESPACE "AAMINDEX"
    ';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;    

  AAMFM.LOGOUTPUT('', 'BEGIN INDEX5 CREATE');
  BEGIN
    EXECUTE IMMEDIATE '
      CREATE UNIQUE INDEX "AAM"."STAGE_DIMENSION_IDX4" ON "AAM"."STAGE_DIMENSION" ("SKU_NBR", "LOCATION_ID") 
      PCTFREE 10 INITRANS 2 MAXTRANS 255 COMPUTE STATISTICS 
      STORAGE(INITIAL 32768 NEXT 32768 MINEXTENTS 1 MAXEXTENTS 2147483645
      PCTINCREASE 0 FREELISTS 1 FREELIST GROUPS 1
      BUFFER_POOL DEFAULT FLASH_CACHE DEFAULT CELL_FLASH_CACHE DEFAULT)
      TABLESPACE "AAMINDEX"
    ';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;    
  
  AAMFM.LOGOUTPUT('', 'BEGIN REBUILDSTAGESUBCLASS');
  BEGIN
    ALLOCMMS.REBUILDSTAGESUBCLASS;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;    

  AAMFM.LOGOUTPUT('', 'BEGIN REBUILDSTAGECLASS');
  BEGIN
    ALLOCMMS.REBUILDSTAGECLASS;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;    

  AAMFM.LOGOUTPUT('', 'BEGIN TEMP$STAGE_DIMENSION DROP');
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TEMP$STAGE_DIMENSION';
  EXCEPTION
    WHEN OTHERS THEN
      NULL;
  END;
  
  AAMFM.LOGOUTPUT('', 'PROGRAM ENDING');

EXCEPTION
  WHEN OTHERS THEN
    AAMFM.LOGOUTPUT('',SQLERRM);
    RAISE;
END;
END PRD_STAGE_RELOAD;