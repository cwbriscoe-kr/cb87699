create or replace PROCEDURE         PRD_DATA_RELOAD AS
  
PRAGMA AUTONOMOUS_TRANSACTION;
--SCRIPT THAT RUNS THIS IS scripts/prdreload.sh
BEGIN
BEGIN
  AAMFM.LOGOUTPUT('', 'PROGRAM STARTING');

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_DEPT RELOAD');
  BEGIN
    DELETE FROM LIST_DEPT;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_DEPT SELECT * FROM LIST_DEPT@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_SUBDEPT RELOAD');
  BEGIN
    DELETE FROM LIST_SUBDEPT;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_SUBDEPT SELECT * FROM LIST_SUBDEPT@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN LIST_CLASS RELOAD');
  BEGIN
    DELETE FROM LIST_CLASS;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_CLASS SELECT * FROM LIST_CLASS@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ITEM_GROUP RELOAD');
  BEGIN
    DELETE FROM LIST_ITEM_GROUP;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ITEM_GROUP SELECT * FROM LIST_ITEM_GROUP@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_SUBCLASS RELOAD');
  BEGIN
    DELETE FROM LIST_SUBCLASS;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_SUBCLASS SELECT * FROM LIST_SUBCLASS@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_CHOICE RELOAD');
  BEGIN
    DELETE FROM LIST_CHOICE;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_CHOICE SELECT * FROM LIST_CHOICE@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN LIST_SKU RELOAD');
  BEGIN
    DELETE FROM LIST_SKU;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_SKU SELECT * FROM LIST_SKU@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LOCATIONS RELOAD');
  BEGIN
    DELETE FROM LOCATIONS;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LOCATIONS SELECT * FROM LOCATIONS@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ATTR_1 RELOAD');
  BEGIN
    DELETE FROM LIST_ATTR_1;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ATTR_1 SELECT * FROM LIST_ATTR_1@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ATTR_2 RELOAD');
  BEGIN
    DELETE FROM LIST_ATTR_2;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ATTR_2 SELECT * FROM LIST_ATTR_2@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ATTR_3 RELOAD');
  BEGIN
    DELETE FROM LIST_ATTR_3;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ATTR_3 SELECT * FROM LIST_ATTR_3@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ATTR_4 RELOAD');
  BEGIN
    DELETE FROM LIST_ATTR_4;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ATTR_4 SELECT * FROM LIST_ATTR_4@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ATTR_5 RELOAD');
  BEGIN
    DELETE FROM LIST_ATTR_5;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ATTR_5 SELECT * FROM LIST_ATTR_5@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ATTR_6 RELOAD');
  BEGIN
    DELETE FROM LIST_ATTR_6;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ATTR_6 SELECT * FROM LIST_ATTR_6@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ATTR_7 RELOAD');
  BEGIN
    DELETE FROM LIST_ATTR_7;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ATTR_7 SELECT * FROM LIST_ATTR_7@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ATTR_8 RELOAD');
  BEGIN
    DELETE FROM LIST_ATTR_8;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ATTR_8 SELECT * FROM LIST_ATTR_8@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ATTR_9 RELOAD');
  BEGIN
    DELETE FROM LIST_ATTR_9;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ATTR_9 SELECT * FROM LIST_ATTR_9@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ATTR_10 RELOAD');
  BEGIN
    DELETE FROM LIST_ATTR_10;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ATTR_10 SELECT * FROM LIST_ATTR_10@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ATTR_11 RELOAD');
  BEGIN
    DELETE FROM LIST_ATTR_11;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ATTR_11 SELECT * FROM LIST_ATTR_11@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN LIST_ATTR_12 RELOAD');
  BEGIN
    DELETE FROM LIST_ATTR_12;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO LIST_ATTR_12 SELECT * FROM LIST_ATTR_12@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN AAMFM.FM_AALATRS_ARCHIVE RELOAD');
  BEGIN
    DELETE FROM AAMFM.FM_AALATRS_ARCHIVE;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO AAMFM.FM_AALATRS_ARCHIVE SELECT * FROM AAMFM.FM_AALATRS_ARCHIVE@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN WORKLIST RELOAD');
  BEGIN
    DELETE FROM WORKLIST;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO WORKLIST SELECT * FROM WORKLIST@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN PACK_STYLE RELOAD');
  BEGIN
    DELETE FROM PACK_STYLE;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO PACK_STYLE SELECT * FROM PACK_STYLE@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN ACTUAL_FORMAT RELOAD');
  BEGIN
    EXECUTE IMMEDIATE 'TRUNCATE TABLE ACTUAL_FORMAT';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT /*+APPEND */ INTO ACTUAL_FORMAT 
    SELECT *
      FROM ACTUAL_FORMAT@JDAPALCX A
     WHERE ALLOC_NBR IN (
           SELECT ALLOC_NBR
             FROM WORKLIST@JDAPALCX
            WHERE ALLOC_NBR > 0)
          ;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN RESULTS_HEADER RELOAD');
  BEGIN
    EXECUTE IMMEDIATE 'TRUNCATE TABLE CAQ$CHS';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE RESULTS_ANALYSIS';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE RESULTS_STATISTICS';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE RESULTS_LOCATIONS';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE RESULTS_DETAIL';
    EXECUTE IMMEDIATE 'TRUNCATE TABLE RESULTS_HEADER';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  
  BEGIN
    INSERT INTO RESULTS_HEADER SELECT * FROM RESULTS_HEADER@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

  AAMFM.LOGOUTPUT('', 'BEGIN RESULTS_DETAIL RELOAD');
  BEGIN
    INSERT INTO RESULTS_DETAIL
    SELECT R.* FROM RESULTS_DETAIL@JDAPALCX R
    WHERE EXISTS(SELECT 1 FROM RESULTS_HEADER WHERE ALLOCATION_NBR = R.ALLOCATION_NBR);
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN RESULTS_LOCATIONS RELOAD');
  BEGIN
    INSERT INTO RESULTS_LOCATIONS 
    SELECT R.* FROM RESULTS_LOCATIONS@JDAPALCX R
    WHERE EXISTS(SELECT 1 FROM RESULTS_HEADER WHERE ALLOCATION_NBR = R.ALLOCATION_NBR);
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN RESULTS_ANALYSIS RELOAD');
  BEGIN
    INSERT INTO RESULTS_ANALYSIS 
    SELECT R.* FROM RESULTS_ANALYSIS@JDAPALCX R
    WHERE EXISTS(SELECT 1 FROM RESULTS_HEADER WHERE ALLOCATION_NBR = R.ALLOCATION_NBR);
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN RESULTS_STATISTICS RELOAD');
  BEGIN
    EXECUTE IMMEDIATE 'DROP TABLE TEMP$RESULTS_STATISTICS';
  EXCEPTION
    WHEN OTHERS THEN
      NULL;
  END;
  BEGIN
    EXECUTE IMMEDIATE 'CREATE TABLE TEMP$RESULTS_STATISTICS AS SELECT * FROM RESULTS_STATISTICS@JDAPALCX';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO RESULTS_STATISTICS 
    SELECT R.*, null, null, null, null, null FROM TEMP$RESULTS_STATISTICS R
    WHERE EXISTS(SELECT 1 FROM RESULTS_HEADER WHERE ALLOCATION_NBR = R.ALLOCATION_NBR);
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

 AAMFM.LOGOUTPUT('', 'BEGIN CAQ$CHS RELOAD');
  BEGIN
    INSERT INTO CAQ$CHS 
    SELECT * FROM CAQ$CHS@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  
  AAMFM.LOGOUTPUT('', 'BEGIN LOG_TABLE TRUNCATE');
  BEGIN
    EXECUTE IMMEDIATE 'TRUNCATE TABLE LOG_TABLE';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
 
  AAMFM.LOGOUTPUT('', 'BEGIN CAQ_HOST RELOAD');
  BEGIN
    DELETE FROM CAQ_HOST;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO CAQ_HOST SELECT * FROM CAQ_HOST@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
 
 AAMFM.LOGOUTPUT('', 'BEGIN MD$IMPORT_DATA RELOAD');
  BEGIN
    DELETE FROM MD$IMPORT_DATA;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO MD$IMPORT_DATA
    SELECT d.*, null, null, null, null FROM MD$IMPORT_DATA@JDAPALCX d;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
 
 AAMFM.LOGOUTPUT('', 'BEGIN CURRENT_WEEK RELOAD');
  BEGIN
    DELETE FROM CURRENT_WEEK;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO CURRENT_WEEK
    SELECT * FROM CURRENT_WEEK@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
 
 
 AAMFM.LOGOUTPUT('', 'BEGIN CALENDAR RELOAD');
  BEGIN
    DELETE FROM CALENDAR;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO CALENDAR
    SELECT * FROM CALENDAR@JDAPALCX;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;

 AAMFM.LOGOUTPUT('', 'BEGIN AALMOD RELOAD');
  BEGIN
    EXECUTE IMMEDIATE 'TRUNCATE TABLE AALMOD';
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  BEGIN
    INSERT INTO AALMOD
    SELECT m.*, null, null, null, null, null FROM AALMOD@JDAPALCX m;
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;
  

AAMFM.LOGOUTPUT('', 'BEGIN ALLOCMMS.PROC_AALMOD');
  BEGIN
    ALLOCMMS.PROC_AALMOD(false);
  EXCEPTION
    WHEN OTHERS THEN
      RAISE;
  END;
  COMMIT;    
  
  AAMFM.LOGOUTPUT('', 'PROGRAM ENDING');

EXCEPTION
  WHEN OTHERS THEN
    AAMFM.LOGOUTPUT('',SQLERRM);
    RAISE;
END;

END PRD_DATA_RELOAD;